package main

var symEncryption = rawTextInput{"symEncryption", `

Symmetric encryption.

Symmetric encryption scheme has five ingredients:
• Plaintext: This is the original message or data that is fed into the algorithm as input.
• Encryption algorithm:The encryption algorithm performs various substitutions
and transformations on the plaintext.
• Secret key: The secret key is also input to the algorithm. The exact substitutions
and transformations performed by the algorithm depend on the key.
• Ciphertext: This is the scrambled message produced as output. It depends on
the plaintext and the secret key. For a given message, two different keys will
produce two different ciphertexts.
• Decryption algorithm: This is essentially the encryption algorithm run in
reverse. It takes the ciphertext and the same secret key and produces the
original plaintext.

Cryptanalysis. 
The process of attempting to discover the plaintext or key is known as cryptanalysis. 

An encryption scheme is computationally secure if the ciphertext generated by
the scheme meets one or both of the following criteria:
• The cost of breaking the cipher exceeds the value of the encrypted information.
• The time required to break the cipher exceeds the useful lifetime of the
information.


Three most important symmetric block ciphers: 
Data Encryption Standard(DES) 1977.
Triple DES (3DES) 1985
And the Advanced Encryption Standard (AES) 2001.

AES uses a block length of 128 bits and a key length that can be 128, 192, or 256 bits.


A stream cipher processes the input elements
continuously, producing output one element at a time, as it goes along. Although
block ciphers are far more common, there are certain applications in which a stream
cipher is more appropriate.

RC4 is a stream cipher designed in 1987.

For symmetric encryption to work, the two parties to an exchange must share the
same key, and that key must be protected from access by others.
Key distribution can be achieved in a number of ways. For two parties A and B:
1. A key could be selected by A and physically delivered to B.
2. A third party could select the key and physically deliver it to A and B.
3. If A and B have previously and recently used a key, one party could transmit the
new key to the other, encrypted using the old key.
4. If A and B each have an encrypted connection to a third party C, C could
deliver a key on the encrypted links to A and B.

`}

var webSecurity = rawTextInput{"webSecurity", `
XSS attacks illustrate a failure to correctly handle both program input and
program output. The failure to check and validate the input results in potentially
dangerous data values being saved by the program. However, the program is not the
target. Rather it is subsequent users of the program, and the programs they use to
access it, which are the target. If all potentially unsafe data output by the program
are sanitized, then the attack cannot occur.
`}
var accessControl = rawTextInput{"accessControl", `
Access Control Policies:
Discretionary access control 1: An access control service that enforces a security policy based on the identity of system entities and their authorizations to access system resources. 
This service is termed discretionary because an entity might have access rights that permit the entity, by its own volition, 
to enable another entity to access some resource.

Discretionary access control 2: Controls access based on the identity of the requestor and on access rules (authorizations) stating what requestors are (or are not) allowed to do. 
This policy is termed discretionary because an entity might have access rights that permit the entity, by its own volition, to enable another entity to access some resource.

Mandatory access control (MAC): Controls access based on comparing security labels (which indicate how sensitive or critical system resources are) with
security clearances (which indicate system entities are eligible to access certain
resources). This policy is termed mandatory because an entity that has clearance
to access a resource may not, just by its own volition, enable another entity to
access that resource.

Role-based access control (RBAC): Controls access based on the roles that
users have within the system and on rules stating what accesses are allowed to
users in given roles.

Attribute-based access control (ABAC): Controls access based on attributes
of the user, the resource to be accessed, and current environmental conditions.
`}
var PKI_messageAuthentication = rawTextInput{"PKI_messageAuthentication", `
In recent years, the most widely used hash function has been the Secure Hash Algorithm. 
SHA was more or less the last remaining standardized hash algorithm by 2005.

When weaknesses were discovered in SHA (now known as SHA-0), a revised
version was issued in 1995 and is referred to as SHA-1. SHA-1 produces a hash value of 160 bits.

SHA-2 includes SHA-256, SHA-384, and SHA-512.
These new versions have the same underlying structure and use the same types of
modular arithmetic and logical binary operations as SHA-1.

In 2005, NIST announced the intention to phase out approval of SHA-1 and move
to a reliance on SHA-2 by 2010. 

The structure and functions used for SHA-3 are substantially different from
those shared by SHA-2 and SHA-1. Thus, if weaknesses are discovered in either
SHA-2 or SHA-3, users have the option to switch to the other standard. SHA-2
has held up well and NIST considers it secure for general use. So for now, SHA-3
is a complement to SHA-2 rather than a replacement. The relatively compact
nature of SHA-3 may make it useful for so-called “embedded” or smart devices
that connect to electronic networks but are not themselves full-fledged computers. 

HMAC Hashed Message authentication code

In recent years, there has been increased interest in developing a MAC derived from a cryptographic
hash code, such as SHA-1. The motivations for this interest are as follows:
• Cryptographic hash functions generally execute faster in software than conventional encryption algorithms such as DES.
• Library code for cryptographic hash functions is widely available.
A hash function such as SHA-1 was not designed for use as a MAC and cannot
be used directly for that purpose because it does not rely on a secret key.

In the birthday attack, the attacker is looking for two messages that produce the same hash.

We have stated that this requires a level of effort of 2 to the power of n over 2 for a hash length of n. On this
basis, the security of the earlier MD5 hash function was called into question, because
a level of effort of 2 to the power of 64 looks feasible with today’s technology. Does this mean that a
128-bit hash function such as MD5 is unsuitable for HMAC? The answer is no, because
of the following argument. To attack MD5, the attacker can choose any set of messages
and work on these offline on a dedicated computing facility to find a collision. Because
the attacker knows the hash algorithm and the default input value, the attacker can generate
the hash code for each of the messages that the attacker generates. However, when
attacking HMAC, the attacker cannot generate message code pairs offline because
the attacker does not know K. Therefore, the attacker must observe a sequence of
messages generated by HMAC under the same key and perform the attack on these
known messages. For a hash code length of 128 bits, this requires 264 observed blocks
(272 bits) generated using the same key. On a 1-Gbps link, one would need to observe a
continuous stream of messages with no change in key for about 150,000 years in order
to succeed. Thus, if speed is a concern, it is acceptable to use MD5 rather than SHA
as the embedded hash function for HMAC, although use of MD5 is now uncommon.

Authenticated encryption (AE) is a term used to describe encryption systems that
simultaneously protect confidentiality and authenticity (integrity) of communications; that is, AE provides both message encryption and message authentication. 


Perhaps the most widely used public-key algorithms are RSA and Diffie-Hellman. 

RSA was develiped in 1977. The RSA scheme
has since that time reigned supreme as the most widely accepted and implemented
approach to public-key encryption.

Four possible approaches to attacking the RSA algorithm are as follows:
• Brute force: This involves trying all possible private keys.
• Mathematical attacks: There are several approaches, all equivalent in effort to
factoring the product of two primes.
• Timing attacks: These depend on the running time of the decryption algorithm.
• Chosen ciphertext attacks: This type of attack exploits properties of the RSA
algorithm.

The defense against the brute force approach is the same for RSA as for other
cryptosystems; namely, use a large key space.

Diffie-Hellman Key Exchange. The purpose of the algorithm is to enable two users to exchange a secret key
securely that can then be used for subsequent encryption of messages. The algorithm
itself is limited to the exchange of the keys.
The Diffie-Hellman algorithm depends for its effectiveness on the difficulty of
computing discrete logarithms.

The security of the Diffie-Hellman key exchange lies in the fact that, while it
is relatively easy to calculate exponentials modulo a prime, it is very difficult to calculate discrete logarithms. For large primes, the latter task is considered infeasible.

Authenticated Diffie-Hellman protocol is an extension of the Diffie-Hellman key exchange that provides authentication, preventing man-in-the-middle attacks.

1: Alice and Bob agree on a large prime number and a base.
2: Alice selects a private key a and computes her public value.
3: Bob selects a private key and computes his public value.
4: Alice sends her public value along with her digital signature to Bob.
5: Bob sends his public value along with his digital signature to Alice.
6: Alice verifies Bobs signature.
7: Bob verifies Alices signature.
8: Both Alice and Bob compute the shared secret.

A DNS (Domain Name System) request, also known as a DNS query, is the process by which a computer or device asks a DNS server to translate a human-readable domain 
into an IP address that computers use to identify each other on the network. This process is essential for browsing the web, sending emails, and many other online activities.

Digital signature An authentication mechanism that enables the creator of a message to attach a code that acts as a signature. 
The signature is formed by taking the hash of the message and encrypting the message with the creator's private key. 
The signature guarantees the source and integrity of the message.


Digital signature definition: The result of a cryptographic transformation
of data that, when properly implemented, provides a mechanism for verifying origin
authentication, data integrity and signatory non-repudiation.

The three digital signature algorithms:
Digital Signature Algorithm: The original NIST-approved algorithm,
which is based on the difficulty of computing discrete logarithms.
RSA Digital Signature Algorithm: Based on the RSA public-key algorithm.
and Elliptic Curve Digital Signature Algorithm

X.509 certificates are
used in most network security applications, including IP security (IPSEC), secure
sockets layer (SSL), transport layer security (TLS), secure electronic transactions
(SET), and S/MIME, as well as in eBusiness applications.

Public-key infrastructure is defined as the set of hardware, software, people, policies, and procedures needed to
create, manage, store, distribute, and revoke digital certificates based on asymmetric
cryptography. The principal objective for developing a PKI is to enable secure, convenient, and efficient acquisition of public keys.
`}
